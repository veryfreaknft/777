<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Account Manager - Twitch Viewer</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        .account-status-active { color: #44d209; }
        .account-status-inactive { color: #ff9800; }
        .account-status-banned { color: #f44336; }
        .table td { vertical-align: middle; }
    </style>
</head>
<body>
    <div class="container mt-4">
        <h1>Account Manager</h1>
        
        <!-- Navigation -->
        <ul class="nav nav-tabs mb-4">
            <li class="nav-item">
                <a class="nav-link" href="/">Dashboard</a>
            </li>
            <li class="nav-item">
                <a class="nav-link active" href="/accounts">Account Manager</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/chat">Chat Manager</a>
            </li>
        </ul>

        <!-- Add Account Form -->
        <div class="card mb-4">
            <div class="card-header">
                <h5 class="mb-0">Add Account</h5>
            </div>
            <div class="card-body">
                <form id="createAccountForm" class="row g-3">
                    <div class="col-md-12">
                        <label for="proxyId" class="form-label">Select Proxy</label>
                        <select class="form-select" id="proxyId" name="proxyId" required>
                            <option value="">Choose a proxy...</option>
                            <% unassignedProxies.forEach(proxy => { %>
                                <option value="<%= proxy.server %>"><%= proxy.server %></option>
                            <% }); %>
                        </select>
                    </div>
                    <div class="col-md-12">
                        <label for="cookies" class="form-label">Twitch Cookies (JSON)</label>
                        <textarea class="form-control" id="cookies" name="cookies" rows="10" required 
                                  placeholder='[{"domain": ".twitch.tv", "name": "auth-token", "value": "..."}, ...]'></textarea>
                        <small class="form-text text-muted">
                            Paste the exported cookies from Cookie-Editor here. Make sure they contain auth-token, login, persistent, and twilight-user.
                        </small>
                    </div>
                    <div class="col-12">
                        <div class="alert alert-info">
                            <p>To get your Twitch cookies:</p>
                            <ol>
                                <li>Install the "Cookie-Editor" browser extension</li>
                                <li>Log into Twitch in your browser</li>
                                <li>Click on the Cookie-Editor extension icon</li>
                                <li>Click "Export" > "Export as JSON"</li>
                                <li>Paste the copied JSON above</li>
                            </ol>
                        </div>
                    </div>
                    <div class="col-12">
                        <button type="button" class="btn btn-primary" onclick="submitCreateAccount()">Add Account</button>
                    </div>
                </form>
            </div>
        </div>

        <!-- Invalid Proxy Warnings -->
        <% if (accountsWithInvalidProxies.length > 0) { %>
            <div class="alert alert-warning mb-4">
                <h5>⚠️ Accounts with Invalid Proxies</h5>
                <p>The following accounts are bound to proxies that no longer exist in the proxy list:</p>
                <ul class="mb-0">
                    <% accountsWithInvalidProxies.forEach(account => { %>
                        <li>
                            <strong><%= account.username %></strong> - Proxy: <%= account.proxyId %>
                            <button class="btn btn-sm btn-outline-primary ms-2" 
                                    onclick="updateProxy('<%= account.id %>')">
                                Update Proxy
                            </button>
                        </li>
                    <% }); %>
                </ul>
            </div>
        <% } %>

        <!-- Accounts Table -->
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0">Managed Accounts</h5>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Username</th>
                                <th>Status</th>
                                <th>Auto-Follow</th>
                                <th>Proxy</th>
                                <th>Last Used</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% accounts.forEach(account => { %>
                                <tr>
                                    <td>
                                        <%= account.username %>
                                        <% if (account.isLoggedIn) { %>
                                            <span class="badge bg-success ms-2">Logged In</span>
                                        <% } %>
                                    </td>
                                    <td>
                                        <i class="bi bi-circle-fill account-status-<%= account.status.toLowerCase() %>"></i>
                                        <%= account.status %>
                                    </td>
                                    <td>
                                        <i class="bi <%= account.autoFollow ? 'bi-check-circle-fill text-success' : 'bi-x-circle-fill text-danger' %>"></i>
                                    </td>
                                    <td>
                                        <% if (account.proxyId) { %>
                                            <% if (accountsWithInvalidProxies.some(a => a.id === account.id)) { %>
                                                <span class="text-danger">
                                                    <%= account.proxyId %> 
                                                    <i class="bi bi-exclamation-triangle-fill" title="Invalid proxy"></i>
                                                </span>
                                            <% } else { %>
                                                <%= account.proxyId %>
                                            <% } %>
                                        <% } else { %>
                                            Any
                                        <% } %>
                                    </td>
                                    <td><%= account.lastUsed ? new Date(account.lastUsed).toLocaleString() : 'Never' %></td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <form action="/accounts/<%= account.id %>/toggle" method="POST" style="display: inline;">
                                                <button type="submit" class="btn btn-sm btn-warning">
                                                    <%= account.status === 'ACTIVE' ? 'Deactivate' : 'Activate' %>
                                                </button>
                                            </form>
                                            <button type="button" class="btn btn-sm btn-danger" onclick="deleteAccount(<%= account.id %>)">
                                                Delete
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            <% }); %>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- Update Proxy Modal -->
        <div class="modal fade" id="updateProxyModal" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Update Proxy</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <form id="updateProxyForm">
                            <input type="hidden" id="updateAccountId" name="accountId">
                            <div class="mb-3">
                                <label for="newProxyId" class="form-label">Select New Proxy</label>
                                <select class="form-select" id="newProxyId" name="proxyId" required>
                                    <option value="">Any available proxy</option>
                                    <% unassignedProxies.forEach(proxy => { %>
                                        <option value="<%= proxy.server %>"><%= proxy.server %></option>
                                    <% }); %>
                                </select>
                            </div>
                            <div class="alert alert-info">
                                <p>A browser window will open for you to:</p>
                                <ol>
                                    <li>Verify the login with email code</li>
                                    <li>Complete any additional verification steps</li>
                                </ol>
                                <p>The window will close automatically once logged in successfully.</p>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-primary" onclick="saveProxyUpdate()">Update & Login</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        const updateProxyModal = new bootstrap.Modal(document.getElementById('updateProxyModal'));

        function updateProxy(accountId) {
            document.getElementById('updateAccountId').value = accountId;
            updateProxyModal.show();
        }

        async function saveProxyUpdate() {
            const accountId = document.getElementById('updateAccountId').value;
            const proxyId = document.getElementById('newProxyId').value;
            
            try {
                const response = await fetch(`/accounts/${accountId}/proxy`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ proxyId })
                });
                
                if (response.ok) {
                    window.location.reload();
                } else {
                    const data = await response.json();
                    alert(data.error || 'Failed to update proxy');
                }
            } catch (error) {
                alert('Failed to update proxy');
            }
        }

        async function deleteAccount(id) {
            if (!confirm('Are you sure you want to delete this account?')) return;
            
            try {
                const response = await fetch(`/accounts/${id}`, {
                    method: 'DELETE'
                });
                
                if (response.ok) {
                    window.location.reload();
                } else {
                    const data = await response.json();
                    alert(data.error || 'Failed to delete account');
                }
            } catch (error) {
                alert('Failed to delete account');
            }
        }

        async function submitCreateAccount() {
            const proxyId = document.getElementById('proxyId').value;
            let cookies;

            try {
                cookies = JSON.parse(document.getElementById('cookies').value);
            } catch (e) {
                alert('Invalid cookie format. Please paste the cookies as a valid JSON array.');
                return;
            }

            if (!proxyId || !cookies) {
                alert('Please select a proxy and paste the cookies');
                return;
            }

            try {
                const response = await fetch('/accounts/create-from-cookies', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ proxyId, cookies })
                });

                if (response.ok) {
                    window.location.reload();
                } else {
                    const data = await response.json();
                    alert(data.error || 'Failed to create account');
                }
            } catch (error) {
                alert('Failed to create account');
            }
        }
    </script>
</body>
</html> 