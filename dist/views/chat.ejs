<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat Manager - Twitch Viewer</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        .template-type-static { color: #2196f3; }
        .template-type-ai { color: #9c27b0; }
        .table td { vertical-align: middle; }
    </style>
</head>
<body>
    <div class="container mt-4">
        <h1>Chat Manager</h1>
        
        <!-- Navigation -->
        <ul class="nav nav-tabs mb-4">
            <li class="nav-item">
                <a class="nav-link" href="/">Dashboard</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/accounts">Account Manager</a>
            </li>
            <li class="nav-item">
                <a class="nav-link active" href="/chat">Chat Manager</a>
            </li>
        </ul>

        <!-- Add Template Form -->
        <div class="card mb-4">
            <div class="card-header">
                <h5 class="mb-0">Add New Template</h5>
            </div>
            <div class="card-body">
                <form action="/chat/templates" method="POST" class="row g-3">
                    <div class="col-md-12">
                        <label for="message" class="form-label">Message Template</label>
                        <textarea class="form-control" id="message" name="message" rows="3" required></textarea>
                        <small class="form-text text-muted">
                            Available variables: {channel}, {game}, {title}, {viewer_count}
                        </small>
                    </div>
                    <div class="col-md-4">
                        <label for="type" class="form-label">Type</label>
                        <select class="form-select" id="type" name="type" onchange="toggleAiConfig()">
                            <option value="static">Static Message</option>
                            <option value="ai_generated">AI Generated</option>
                        </select>
                    </div>
                    <div class="col-md-4">
                        <label for="minDelay" class="form-label">Min Delay (seconds)</label>
                        <input type="number" class="form-control" id="minDelay" name="minDelay" required min="0">
                    </div>
                    <div class="col-md-4">
                        <label for="maxDelay" class="form-label">Max Delay (seconds)</label>
                        <input type="number" class="form-control" id="maxDelay" name="maxDelay" required min="0">
                    </div>
                    
                    <!-- AI Configuration -->
                    <div id="aiConfig" style="display: none;">
                        <div class="col-md-12">
                            <label for="prompt" class="form-label">AI Prompt</label>
                            <textarea class="form-control" id="prompt" name="aiConfig.prompt" rows="2"></textarea>
                            <small class="form-text text-muted">
                                Guide the AI in generating chat messages. Available context: channel info, chat history
                            </small>
                        </div>
                        <div class="col-md-6">
                            <label for="temperature" class="form-label">Temperature (0-2)</label>
                            <input type="number" class="form-control" id="temperature" name="aiConfig.temperature" 
                                   step="0.1" min="0" max="2" value="0.7">
                            <small class="form-text text-muted">Higher values make output more random</small>
                        </div>
                        <div class="col-md-6">
                            <label for="maxTokens" class="form-label">Max Tokens</label>
                            <input type="number" class="form-control" id="maxTokens" name="aiConfig.maxTokens" 
                                   min="1" max="100" value="50">
                            <small class="form-text text-muted">Maximum length of generated messages</small>
                        </div>
                    </div>

                    <div class="col-12">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="enabled" name="enabled" value="true" checked>
                            <label class="form-check-label" for="enabled">
                                Template is enabled
                            </label>
                        </div>
                    </div>
                    <div class="col-12">
                        <button type="submit" class="btn btn-primary">Add Template</button>
                    </div>
                </form>
            </div>
        </div>

        <!-- Templates Table -->
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0">Chat Templates</h5>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Message</th>
                                <th>Type</th>
                                <th>Delay</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% templates.forEach(template => { %>
                                <tr>
                                    <td><%= template.message %></td>
                                    <td>
                                        <i class="bi bi-chat-dots template-type-<%= template.type === 'static' ? 'static' : 'ai' %>"></i>
                                        <%= template.type === 'static' ? 'Static' : 'AI Generated' %>
                                    </td>
                                    <td><%= template.minDelay %>-<%= template.maxDelay %>s</td>
                                    <td>
                                        <span class="badge <%= template.enabled ? 'bg-success' : 'bg-danger' %>">
                                            <%= template.enabled ? 'Enabled' : 'Disabled' %>
                                        </span>
                                    </td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <button type="button" class="btn btn-sm btn-primary" onclick="editTemplate(<%= template.id %>)">
                                                Edit
                                            </button>
                                            <button type="button" class="btn btn-sm btn-warning" onclick="toggleTemplate(<%= template.id %>)">
                                                <%= template.enabled ? 'Disable' : 'Enable' %>
                                            </button>
                                            <button type="button" class="btn btn-sm btn-danger" onclick="deleteTemplate(<%= template.id %>)">
                                                Delete
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            <% }); %>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Template Modal -->
    <div class="modal fade" id="editModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Edit Template</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="editForm">
                        <input type="hidden" id="editId">
                        <div class="mb-3">
                            <label for="editMessage" class="form-label">Message Template</label>
                            <textarea class="form-control" id="editMessage" name="message" rows="3" required></textarea>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <label for="editMinDelay" class="form-label">Min Delay (seconds)</label>
                                <input type="number" class="form-control" id="editMinDelay" name="minDelay" required min="0">
                            </div>
                            <div class="col-md-6">
                                <label for="editMaxDelay" class="form-label">Max Delay (seconds)</label>
                                <input type="number" class="form-control" id="editMaxDelay" name="maxDelay" required min="0">
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" onclick="saveTemplate()">Save Changes</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        const editModal = new bootstrap.Modal(document.getElementById('editModal'));
        
        function toggleAiConfig() {
            const type = document.getElementById('type').value;
            const aiConfig = document.getElementById('aiConfig');
            aiConfig.style.display = type === 'ai_generated' ? 'block' : 'none';
        }

        async function editTemplate(id) {
            try {
                const response = await fetch(`/chat/templates/${id}`);
                const template = await response.json();
                
                document.getElementById('editId').value = template.id;
                document.getElementById('editMessage').value = template.message;
                document.getElementById('editMinDelay').value = template.minDelay;
                document.getElementById('editMaxDelay').value = template.maxDelay;
                
                editModal.show();
            } catch (error) {
                alert('Failed to load template');
            }
        }

        async function saveTemplate() {
            const id = document.getElementById('editId').value;
            const formData = new FormData(document.getElementById('editForm'));
            
            try {
                const response = await fetch(`/chat/templates/${id}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(Object.fromEntries(formData))
                });
                
                if (response.ok) {
                    window.location.reload();
                } else {
                    const data = await response.json();
                    alert(data.error || 'Failed to update template');
                }
            } catch (error) {
                alert('Failed to update template');
            }
        }

        async function toggleTemplate(id) {
            try {
                const response = await fetch(`/chat/templates/${id}/toggle`, {
                    method: 'POST'
                });
                
                if (response.ok) {
                    window.location.reload();
                } else {
                    const data = await response.json();
                    alert(data.error || 'Failed to toggle template');
                }
            } catch (error) {
                alert('Failed to toggle template');
            }
        }

        async function deleteTemplate(id) {
            if (!confirm('Are you sure you want to delete this template?')) return;
            
            try {
                const response = await fetch(`/chat/templates/${id}`, {
                    method: 'DELETE'
                });
                
                if (response.ok) {
                    window.location.reload();
                } else {
                    const data = await response.json();
                    alert(data.error || 'Failed to delete template');
                }
            } catch (error) {
                alert('Failed to delete template');
            }
        }
    </script>
</body>
</html> 